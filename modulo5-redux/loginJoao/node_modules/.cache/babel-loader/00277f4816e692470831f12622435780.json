{"ast":null,"code":"import { api } from \"../../api\";\nimport { useNavigate } from \"react-router\";\nimport moment from \"moment\"; // GET\n\nexport const getPessoas = async dispatch => {\n  const {\n    data\n  } = await api.get('/pessoa');\n\n  if (data) {\n    dispatch({\n      type: 'GET_PESSOAS',\n      pessoas: data\n    });\n  } else {\n    alert('Deu erro no login');\n  }\n}; // EDIT (PUT)\n\nexport const prepareEdition = (pessoa, dispatch) => {\n  console.log('pessoa é: ', pessoa);\n  pessoa.dataNascimento = moment(dataNascimento, 'YYYY-MM-DD').format('DDMMYYYY');\n  dispatch({\n    type: 'SET_EDIT',\n    edit: {\n      status: true,\n      pessoa: pessoa\n    }\n  });\n};\nexport const cancelEdit = dispatch => {\n  dispatch({\n    type: 'SET_EDIT',\n    edit: {\n      status: false,\n      pessoa: {}\n    }\n  });\n};\nexport const putPessoa = async (pessoa, id, dispatch) => {\n  console.log('id é: ', id);\n  console.log('pessoa é: ', pessoa);\n  const {\n    data\n  } = await api.put(`/pessoa/${id}`, pessoa);\n  console.log('data no put', data);\n  window.location.href = '/pessoa';\n}; // DELETE \n\nexport const deletePessoa = async (id, dispatch) => {\n  console.log(\"delete id é: \", id);\n  const response = await api.delete(`/pessoa/${id}`);\n\n  if (response) {\n    getPessoas(dispatch);\n  } else {\n    alert('Erro ao deletar');\n  }\n}; // POST \n\nexport const postPessoa = async (pessoa, dispatch) => {\n  const {\n    data\n  } = await api.post('/pessoa', pessoa);\n  console.log('data no post é: ', data);\n  if (data) getPessoas(dispatch);\n  window.location.href = '/pessoa';\n};","map":{"version":3,"sources":["C:/Users/leandro/Desktop/VemSer/modulo5-redux/loginJoao/src/store/actions/PessoaActions.js"],"names":["api","useNavigate","moment","getPessoas","dispatch","data","get","type","pessoas","alert","prepareEdition","pessoa","console","log","dataNascimento","format","edit","status","cancelEdit","putPessoa","id","put","window","location","href","deletePessoa","response","delete","postPessoa","post"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,GAAG,CAACM,GAAJ,CAAQ,SAAR,CAAvB;;AACA,MAAID,IAAJ,EAAU;AACRD,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GALD,MAKO;AACLI,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,CAVM,C,CAYP;;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASP,QAAT,KAAsB;AAClDQ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B;AACAA,EAAAA,MAAM,CAACG,cAAP,GAAwBZ,MAAM,CAACY,cAAD,EAAgB,YAAhB,CAAN,CAAoCC,MAApC,CAA2C,UAA3C,CAAxB;AACAX,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,UADC;AAEPS,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,IADJ;AAEJN,MAAAA,MAAM,EAAEA;AAFJ;AAFC,GAAD,CAAR;AAOD,CAVM;AAaP,OAAO,MAAMO,UAAU,GAAId,QAAD,IAAc;AACtCA,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,UADC;AAEPS,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,KADJ;AAEJN,MAAAA,MAAM,EAAE;AAFJ;AAFC,GAAD,CAAR;AAOD,CARM;AAUP,OAAO,MAAMQ,SAAS,GAAG,OAAOR,MAAP,EAAeS,EAAf,EAAmBhB,QAAnB,KAA+B;AACtDQ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,EAAtB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B;AACA,QAAM;AAACN,IAAAA;AAAD,MAAS,MAAML,GAAG,CAACqB,GAAJ,CAAS,WAAUD,EAAG,EAAtB,EAAwBT,MAAxB,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BR,IAA3B;AACAiB,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD,CANM,C,CASP;;AACA,OAAO,MAAMC,YAAY,GAAG,OAAOL,EAAP,EAAWhB,QAAX,KAAwB;AAClDQ,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,EAA7B;AACA,QAAMM,QAAQ,GAAG,MAAM1B,GAAG,CAAC2B,MAAJ,CAAY,WAAUP,EAAG,EAAzB,CAAvB;;AACA,MAAIM,QAAJ,EAAc;AACZvB,IAAAA,UAAU,CAACC,QAAD,CAAV;AACD,GAFD,MAEK;AACHK,IAAAA,KAAK,CAAC,iBAAD,CAAL;AACD;AACF,CARM,C,CAUP;;AACA,OAAO,MAAMmB,UAAU,GAAG,OAAOjB,MAAP,EAAeP,QAAf,KAA4B;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,GAAG,CAAC6B,IAAJ,CAAS,SAAT,EAAoBlB,MAApB,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,IAAhC;AACA,MAAGA,IAAH,EAASF,UAAU,CAACC,QAAD,CAAV;AACTkB,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,SAArB;AACD,CALM","sourcesContent":["import { api } from \"../../api\";\r\nimport { useNavigate } from \"react-router\";\r\nimport moment from \"moment\";\r\n// GET\r\nexport const getPessoas = async (dispatch) => {\r\n  const { data } = await api.get('/pessoa');\r\n  if (data) {\r\n    dispatch({\r\n      type: 'GET_PESSOAS',\r\n      pessoas: data\r\n    })\r\n  } else {\r\n    alert('Deu erro no login');\r\n  }\r\n}\r\n\r\n// EDIT (PUT)\r\n\r\nexport const prepareEdition = (pessoa, dispatch) => {\r\n  console.log('pessoa é: ', pessoa)\r\n  pessoa.dataNascimento = moment(dataNascimento,'YYYY-MM-DD').format('DDMMYYYY');\r\n  dispatch({\r\n    type: 'SET_EDIT',\r\n    edit: {\r\n      status: true,\r\n      pessoa: pessoa\r\n    }\r\n  })  \r\n}\r\n\r\n\r\nexport const cancelEdit = (dispatch) => {\r\n  dispatch({\r\n    type: 'SET_EDIT',\r\n    edit: {\r\n      status: false,\r\n      pessoa: {}\r\n    }\r\n  });\r\n}\r\n\r\nexport const putPessoa = async (pessoa, id, dispatch) =>{\r\n  console.log('id é: ', id);\r\n  console.log('pessoa é: ', pessoa);\r\n  const {data} = await api.put(`/pessoa/${id}`,pessoa);\r\n  console.log('data no put', data)\r\n  window.location.href = '/pessoa';\r\n}\r\n\r\n\r\n// DELETE \r\nexport const deletePessoa = async (id, dispatch) => {\r\n  console.log(\"delete id é: \", id)\r\n  const response = await api.delete(`/pessoa/${id}`);\r\n  if (response) {\r\n    getPessoas(dispatch);\r\n  }else{\r\n    alert('Erro ao deletar')\r\n  }\r\n}\r\n\r\n// POST \r\nexport const postPessoa = async (pessoa, dispatch) => {\r\n  const { data } = await api.post('/pessoa', pessoa);\r\n  console.log('data no post é: ', data)\r\n  if(data) getPessoas(dispatch);\r\n  window.location.href='/pessoa';\r\n}"]},"metadata":{},"sourceType":"module"}