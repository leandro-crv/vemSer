{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leandro\\\\Desktop\\\\VemSer\\\\modulo5-redux\\\\loginJoao\\\\src\\\\pages\\\\Cadastro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Formik, Field, Form, FormikErrors, ErrorMessage } from 'formik';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport styles from './Cadastro.module.css';\nimport { postPessoa } from '../store/actions/PessoaActions';\nimport { putPessoa } from '../store/actions/PessoaActions';\nimport { cancelEdit } from '../store/actions/PessoaActions';\nimport { useNavigate } from 'react-router';\nimport InputMask from 'react-input-mask';\nimport { removeMaskCpf } from '../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cadastro = ({\n  edit,\n  pessoas,\n  dispatch\n}) => {\n  _s();\n\n  const navigate = useNavigate();\n\n  const cancelEditBackPage = () => {\n    cancelEdit(dispatch);\n    navigate('/pessoa');\n  };\n\n  useEffect(() => {\n    return () => {\n      cancelEdit(dispatch);\n    };\n  }, []);\n  const initialPessoa = {\n    nome: '',\n    email: '',\n    cpf: '',\n    dataNascimento: ''\n  };\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.nome) {\n      errors.nome = 'Nome é obrigatório';\n    }\n\n    const cpfNumeros = removeMaskCpf(values.cpf);\n\n    if (cpfNumeros.length !== 11) {\n      errors.cpf = 'CPF deve conter 11 dígitos';\n    }\n\n    if (!values.email) {\n      errors.email = 'Email é obrigatório';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Email inválido';\n    }\n\n    if (!moment(values.dataNascimento, 'DDMMYYYY').endOf('day').fromNow().match('ago')) {\n      errors.dataNascimento = 'Data de nascimento não pode ser maior ou igual a hoje';\n    }\n\n    ;\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cadastro,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.titulo,\n      children: \"Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: edit.status ? edit.pessoa : initialPessoa,\n      enableReinitialize: true,\n      validate: validate,\n      onSubmit: async values => {\n        if (!edit.status) {\n          if (pessoas.find(pessoa => pessoa.cpf === values.cpf)) {\n            alert('Este cpf já existe');\n          } else {\n            values.dataNascimento = moment(values.dataNascimento, 'DD/MM/YYYY').format('YYYY-MM-DD');\n            values.cpf = removeMaskCpf(values.cpf);\n            console.log('values são: ', values);\n            postPessoa(values, dispatch);\n          }\n        } else {\n          let id = values.idPessoa;\n          delete values['idPessoa'];\n          console.log('values são: ', values);\n          putPessoa(values, id, dispatch);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nome\",\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"nome\",\n            name: \"nome\",\n            placeholder: \"Digite seu nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"nome\",\n            render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Digite seu email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cpf\",\n            children: \"CPF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"cpf\",\n            name: \"cpf\",\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(InputMask, { ...field,\n              mask: `999.999.999-99`,\n              disabled: edit.status ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"cpf\",\n            render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dataNascimento\",\n            children: \"Data de nascimento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"dataNascimento\",\n            name: \"dataNascimento\",\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(InputMask, { ...field,\n              mask: `99/99/9999`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"dataNascimento\",\n            render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), !edit.status ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"botao1\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.doisBotoes,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => cancelEditBackPage(),\n            className: \"botao2\",\n            children: \" Cancelar \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"botao1\",\n            children: \" Salvar \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cadastro, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Cadastro;\n\nconst mapStateToProps = state => ({\n  pessoas: state.pessoaReducer.pessoas,\n  edit: state.pessoaReducer.edit\n});\n\nexport default connect(mapStateToProps)(Cadastro);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"sources":["C:/Users/leandro/Desktop/VemSer/modulo5-redux/loginJoao/src/pages/Cadastro.js"],"names":["React","useEffect","Formik","Field","Form","FormikErrors","ErrorMessage","moment","connect","styles","postPessoa","putPessoa","cancelEdit","useNavigate","InputMask","removeMaskCpf","Cadastro","edit","pessoas","dispatch","navigate","cancelEditBackPage","initialPessoa","nome","email","cpf","dataNascimento","validate","values","errors","cpfNumeros","length","test","endOf","fromNow","match","cadastro","titulo","status","pessoa","find","alert","format","console","log","id","idPessoa","msg","field","doisBotoes","mapStateToProps","state","pessoaReducer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,EAA4CC,YAA5C,QAAgE,QAAhE;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,YAA9B;;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAiC;AAAA;;AAChD,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,kBAAkB,GAAG,MAAM;AAC/BT,IAAAA,UAAU,CAACO,QAAD,CAAV;AACAC,IAAAA,QAAQ,CAAC,SAAD,CAAR;AACD,GAHD;;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXW,MAAAA,UAAU,CAACO,QAAD,CAAV;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMG,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAE,EADc;AAEpBC,IAAAA,KAAK,EAAE,EAFa;AAGpBC,IAAAA,GAAG,EAAE,EAHe;AAIpBC,IAAAA,cAAc,EAAE;AAJI,GAAtB;;AAOA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAI,CAACD,MAAM,CAACL,IAAZ,EAAkB;AAChBM,MAAAA,MAAM,CAACN,IAAP,GAAc,oBAAd;AACD;;AAED,UAAMO,UAAU,GAAGf,aAAa,CAACa,MAAM,CAACH,GAAR,CAAhC;;AACA,QAAIK,UAAU,CAACC,MAAX,KAAsB,EAA1B,EAA8B;AAC5BF,MAAAA,MAAM,CAACJ,GAAP,GAAa,4BAAb;AACD;;AAED,QAAI,CAACG,MAAM,CAACJ,KAAZ,EAAmB;AACjBK,MAAAA,MAAM,CAACL,KAAP,GAAe,qBAAf;AACD,KAFD,MAEO,IAAI,CAAC,4CAA4CQ,IAA5C,CAAiDJ,MAAM,CAACJ,KAAxD,CAAL,EAAqE;AAC1EK,MAAAA,MAAM,CAACL,KAAP,GAAe,gBAAf;AACD;;AAED,QAAI,CAACjB,MAAM,CAACqB,MAAM,CAACF,cAAR,EAAwB,UAAxB,CAAN,CAA0CO,KAA1C,CAAgD,KAAhD,EAAuDC,OAAvD,GAAiEC,KAAjE,CAAuE,KAAvE,CAAL,EAAoF;AAClFN,MAAAA,MAAM,CAACH,cAAP,GAAwB,uDAAxB;AACD;;AAAA;AAED,WAAOG,MAAP;AACD,GAtBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAAC2B,QAAvB;AAAA,4BAEE;AAAI,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AACE,MAAA,aAAa,EAAEpB,IAAI,CAACqB,MAAL,GAAcrB,IAAI,CAACsB,MAAnB,GAA4BjB,aAD7C;AAEE,MAAA,kBAAkB,EAAE,IAFtB;AAGE,MAAA,QAAQ,EAAEK,QAHZ;AAIE,MAAA,QAAQ,EAAE,MAAOC,MAAP,IAAkB;AAC1B,YAAI,CAACX,IAAI,CAACqB,MAAV,EAAkB;AAChB,cAAIpB,OAAO,CAACsB,IAAR,CAAaD,MAAM,IAAIA,MAAM,CAACd,GAAP,KAAeG,MAAM,CAACH,GAA7C,CAAJ,EAAuD;AACrDgB,YAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,WAFD,MAEO;AACLb,YAAAA,MAAM,CAACF,cAAP,GAAwBnB,MAAM,CAACqB,MAAM,CAACF,cAAR,EAAwB,YAAxB,CAAN,CAA4CgB,MAA5C,CAAmD,YAAnD,CAAxB;AACAd,YAAAA,MAAM,CAACH,GAAP,GAAaV,aAAa,CAACa,MAAM,CAACH,GAAR,CAA1B;AACAkB,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BhB,MAA5B;AACAlB,YAAAA,UAAU,CAACkB,MAAD,EAAST,QAAT,CAAV;AACD;AAEF,SAVD,MAWK;AACH,cAAI0B,EAAE,GAAGjB,MAAM,CAACkB,QAAhB;AACA,iBAAOlB,MAAM,CAAC,UAAD,CAAb;AACAe,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BhB,MAA5B;AACAjB,UAAAA,SAAS,CAACiB,MAAD,EAASiB,EAAT,EAAa1B,QAAb,CAAT;AACD;AACF,OAtBH;AAAA,6BAwBE,QAAC,IAAD;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,MAAV;AAAiB,YAAA,IAAI,EAAC,MAAtB;AAA6B,YAAA,WAAW,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,MAAM,EAAE4B,GAAG,iBAAI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,wBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,kCAEE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,WAAW,EAAC,kBAHd;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,kBAHF,eASE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAiBE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,KAAV;AAAgB,YAAA,IAAI,EAAC,KAArB;AAA2B,YAAA,MAAM,EAAE,CAAC;AAAEC,cAAAA;AAAF,aAAD,kBACjC,QAAC,SAAD,OAAeA,KAAf;AAAsB,cAAA,IAAI,EAAG,gBAA7B;AAA8C,cAAA,QAAQ,EAAE/B,IAAI,CAACqB,MAAL,GAAc,IAAd,GAAqB;AAA7E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,KAAnB;AAAyB,YAAA,MAAM,EAAES,GAAG,iBAAI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,wBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAwBE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,gBAAV;AAA2B,YAAA,IAAI,EAAC,gBAAhC;AAAiD,YAAA,MAAM,EAAE,CAAC;AAAEC,cAAAA;AAAF,aAAD,kBACvD,QAAC,SAAD,OAAeA,KAAf;AAAsB,cAAA,IAAI,EAAG;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,gBAAnB;AAAoC,YAAA,MAAM,EAAED,GAAG,iBAAI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,wBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,EA+BG,CAAC9B,IAAI,CAACqB,MAAN,gBACC;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAK,UAAA,SAAS,EAAE7B,MAAM,CAACwC,UAAvB;AAAA,kCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAM5B,kBAAkB,EAAvD;AAA2D,YAAA,SAAS,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuED,CApHD;;GAAML,Q;UACaH,W;;;KADbG,Q;;AAsHN,MAAMkC,eAAe,GAAGC,KAAK,KAAK;AAChCjC,EAAAA,OAAO,EAAEiC,KAAK,CAACC,aAAN,CAAoBlC,OADG;AAEhCD,EAAAA,IAAI,EAAEkC,KAAK,CAACC,aAAN,CAAoBnC;AAFM,CAAL,CAA7B;;AAMA,eAAeT,OAAO,CAAC0C,eAAD,CAAP,CAAyBlC,QAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Formik, Field, Form, FormikErrors, ErrorMessage } from 'formik';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Cadastro.module.css';\r\nimport { postPessoa } from '../store/actions/PessoaActions';\r\nimport { putPessoa } from '../store/actions/PessoaActions';\r\nimport { cancelEdit } from '../store/actions/PessoaActions';\r\nimport { useNavigate } from 'react-router';\r\nimport InputMask from 'react-input-mask';\r\nimport { removeMaskCpf } from '../helpers';\r\n\r\n\r\n\r\nconst Cadastro = ({ edit, pessoas, dispatch }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const cancelEditBackPage = () => {\r\n    cancelEdit(dispatch);\r\n    navigate('/pessoa')\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      cancelEdit(dispatch)\r\n    }\r\n  }, [])\r\n\r\n  const initialPessoa = {\r\n    nome: '',\r\n    email: '',\r\n    cpf: '',\r\n    dataNascimento: ''\r\n  }\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.nome) {\r\n      errors.nome = 'Nome é obrigatório';\r\n    }\r\n\r\n    const cpfNumeros = removeMaskCpf(values.cpf);\r\n    if (cpfNumeros.length !== 11) {\r\n      errors.cpf = 'CPF deve conter 11 dígitos';\r\n    }\r\n\r\n    if (!values.email) {\r\n      errors.email = 'Email é obrigatório';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Email inválido';\r\n    }\r\n\r\n    if (!moment(values.dataNascimento, 'DDMMYYYY').endOf('day').fromNow().match('ago')) {\r\n      errors.dataNascimento = 'Data de nascimento não pode ser maior ou igual a hoje'\r\n    };\r\n\r\n    return errors;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.cadastro}>\r\n\r\n      <h1 className={styles.titulo}>Cadastro</h1>\r\n      <Formik\r\n        initialValues={edit.status ? edit.pessoa : initialPessoa}\r\n        enableReinitialize={true}\r\n        validate={validate}\r\n        onSubmit={async (values) => {\r\n          if (!edit.status) {\r\n            if (pessoas.find(pessoa => pessoa.cpf === values.cpf)) {\r\n              alert('Este cpf já existe')\r\n            } else {\r\n              values.dataNascimento = moment(values.dataNascimento, 'DD/MM/YYYY').format('YYYY-MM-DD');\r\n              values.cpf = removeMaskCpf(values.cpf);\r\n              console.log('values são: ', values)\r\n              postPessoa(values, dispatch);\r\n            }\r\n\r\n          }\r\n          else {\r\n            let id = values.idPessoa;\r\n            delete values['idPessoa'];\r\n            console.log('values são: ', values)\r\n            putPessoa(values, id, dispatch);\r\n          }\r\n        }}\r\n      >\r\n        <Form>\r\n          <div>\r\n            <label htmlFor=\"nome\">Nome</label>\r\n            <Field id=\"nome\" name=\"nome\" placeholder=\"Digite seu nome\" />\r\n            <ErrorMessage name='nome' render={msg => <div className='error'>{msg}</div>}/>\r\n          </div>\r\n          <div>\r\n\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Field\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Digite seu email\"\r\n              type=\"email\"\r\n            />\r\n            <ErrorMessage name='email' className='error' />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"cpf\">CPF</label>\r\n            <Field id=\"cpf\" name=\"cpf\" render={({ field }) => (\r\n              <InputMask {...field} mask={`999.999.999-99`} disabled={edit.status ? true : false }/>\r\n            )} />\r\n            <ErrorMessage name='cpf' render={msg => <div className='error'>{msg}</div>}/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"dataNascimento\">Data de nascimento</label>\r\n            <Field id=\"dataNascimento\" name=\"dataNascimento\" render={({ field }) => (\r\n              <InputMask {...field} mask={`99/99/9999`} />\r\n            )} />\r\n            <ErrorMessage name='dataNascimento' render={msg => <div className='error'>{msg}</div>} />\r\n          </div>\r\n          {!edit.status ? (\r\n            <button type=\"submit\" className='botao1'>Cadastrar</button>\r\n          ) : (\r\n            <div className={styles.doisBotoes}>\r\n              <button type='button' onClick={() => cancelEditBackPage()} className='botao2'> Cancelar </button>\r\n              <button type=\"submit\" className='botao1'> Salvar </button>\r\n            </div>\r\n          )}\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  pessoas: state.pessoaReducer.pessoas,\r\n  edit: state.pessoaReducer.edit\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(Cadastro);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}