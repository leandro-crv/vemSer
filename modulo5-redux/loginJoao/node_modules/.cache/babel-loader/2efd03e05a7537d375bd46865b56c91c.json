{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leandro\\\\Desktop\\\\VemSer\\\\modulo5-redux\\\\loginJoao\\\\src\\\\pages\\\\Endereco.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { Formik, Field, Form, FormikHelpers, FormikErrors, ErrorMessage } from 'formik';\nimport ReactInputMask from 'react-input-mask';\nimport axios from 'axios';\nimport { EnderecoDTO } from '../model/EnderecoDTO';\nimport { PessoaDTO } from '../model/PessoaDTO';\nimport { PessoaContext } from '../context/PessoaContext';\nimport { BsSearch } from 'react-icons/bs';\nimport styles from './Endereco.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Endereco = () => {\n  _s();\n\n  const [adrressValid, setAddressValid] = useState(true);\n  const [idPessoa, setIdPessoa] = useState < string > '';\n  const initialAddress = {\n    cep: '',\n    cidade: '',\n    complemento: '',\n    estado: '',\n    idEndereco: 0,\n    logradouro: '',\n    pais: '',\n    tipo: '',\n    numero: 0\n  };\n  const {\n    getPessoas,\n    listPessoas,\n    postEndereco\n  } = useContext < any > PessoaContext;\n  const [address, setAdress] = useState < EnderecoDTO > initialAddress;\n\n  const getAddress = async cep => {\n    const {\n      data\n    } = await axios.get(`https://viacep.com.br/ws/${cep}/json/`);\n\n    if (data.erro) {\n      setAddressValid(false);\n      setAdress(initialAddress);\n    } else {\n      const newEnderco = {\n        cep: data.cep,\n        cidade: data.localidade.length ? data.localidade : 'cidade não informada',\n        complemento: data.complemento.length ? data.complemento : 'Sem complemento',\n        estado: data.uf.length ? data.uf : 'Estado não informado',\n        logradouro: data.logradouro ? data.logradouro : 'Logradouro não informado',\n        pais: 'Brasil',\n        tipo: 'COMERCIAL',\n        numero: data.numero !== undefined ? data.numero : 0\n      };\n      getPessoas();\n      setAddressValid(true);\n      setAdress(newEnderco);\n    }\n  };\n\n  const pegarIdPessoa = e => {\n    const pessoa = [...e.target].find(element => element.selected);\n    setIdPessoa(pessoa.value);\n  };\n\n  const validateCep = values => {\n    const errors = {};\n    let cepNumeros = values.cep.replaceAll(new RegExp('[_-]', 'gi'), '');\n\n    if (!values.cep) {\n      errors.cep = 'CEP é obrigatório';\n    } else if (cepNumeros.length !== 8) {\n      errors.cep = 'CEP deve conter 8 números';\n    }\n\n    return errors;\n  };\n\n  const validateAddress = values => {\n    const errors = {};\n\n    if (!values.cidade) {\n      errors.cidade = 'Cidade é campo obrigatório';\n    }\n\n    if (!values.estado) {\n      errors.estado = 'Estado é um campo obrigatório';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.titulo,\n      children: \"Endere\\xE7o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        cep: ''\n      },\n      validate: validateCep,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        getAddress(values.cep);\n        setSubmitting(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cep,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cep\",\n            children: \"Cep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"cep\",\n            name: \"cep\",\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(ReactInputMask, { ...field,\n              mask: `99999-999`,\n              placeholder: \"Insira seu CEP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"cep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), !adrressValid ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: \"CEP inexistente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: styles.submitCep,\n            children: /*#__PURE__*/_jsxDEV(BsSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: address,\n      validate: validateAddress,\n      enableReinitialize: true,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        postEndereco(values, idPessoa);\n        setAdress(initialAddress);\n        setSubmitting(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cidade\",\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"cidade\",\n              name: \"cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"logradouro\",\n              children: \"Logradouro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"logradouro\",\n              name: \"logradouro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"logradouro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.ufEPais,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"numero\",\n                children: \"N\\xFAmero\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"numero\",\n                name: \"numero\",\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"numero\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"estado\",\n                children: \"UF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"estado\",\n                name: \"estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pais\",\n                children: \"Pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"pais\",\n                name: \"pais\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"pais\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), listPessoas && listPessoas.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Adicionar endere\\xE7o a: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              name: \"user\",\n              id: \"usuarios-endereco\",\n              onChange: e => pegarIdPessoa(e),\n              children: listPessoas.map(pessoa => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pessoa.idPessoa,\n                children: pessoa.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"botao1\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Endereco, \"9c3H/IABXHQUMa++eHCQ3c+N44c=\");\n\n_c = Endereco;\nexport default Endereco;\n\nvar _c;\n\n$RefreshReg$(_c, \"Endereco\");","map":{"version":3,"sources":["C:/Users/leandro/Desktop/VemSer/modulo5-redux/loginJoao/src/pages/Endereco.js"],"names":["useState","useContext","Formik","Field","Form","FormikHelpers","FormikErrors","ErrorMessage","ReactInputMask","axios","EnderecoDTO","PessoaDTO","PessoaContext","BsSearch","styles","Endereco","adrressValid","setAddressValid","idPessoa","setIdPessoa","string","initialAddress","cep","cidade","complemento","estado","idEndereco","logradouro","pais","tipo","numero","getPessoas","listPessoas","postEndereco","any","address","setAdress","getAddress","data","get","erro","newEnderco","localidade","length","uf","undefined","pegarIdPessoa","e","pessoa","target","find","element","selected","value","validateCep","values","errors","cepNumeros","replaceAll","RegExp","validateAddress","form","titulo","setSubmitting","field","submitCep","ufEPais","map","nome"],"mappings":"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","sourcesContent":["import { useState, useContext } from 'react';\r\nimport { Formik, Field, Form, FormikHelpers, FormikErrors, ErrorMessage } from 'formik';\r\nimport ReactInputMask from 'react-input-mask';\r\nimport axios from 'axios';\r\n\r\nimport { EnderecoDTO } from '../model/EnderecoDTO';\r\nimport { PessoaDTO } from '../model/PessoaDTO';\r\nimport { PessoaContext } from '../context/PessoaContext';\r\n\r\nimport {BsSearch} from 'react-icons/bs'\r\n\r\nimport styles from './Endereco.module.css';\r\n\r\ninterface Cep {\r\n  cep: string;\r\n}\r\n\r\nconst Endereco = () => {\r\n  const [adrressValid, setAddressValid] = useState(true);\r\n  const [idPessoa, setIdPessoa] = useState<string>('');\r\n  const initialAddress = {\r\n    cep: '',\r\n    cidade: '',\r\n    complemento: '',\r\n    estado: '',\r\n    idEndereco: 0,\r\n    logradouro: '',\r\n    pais: '',\r\n    tipo: '',\r\n    numero: 0\r\n  }\r\n  const { getPessoas, listPessoas, postEndereco } = useContext<any>(PessoaContext);\r\n  const [address, setAdress] = useState<EnderecoDTO>(initialAddress);\r\n  const getAddress = async (cep: string) => {\r\n    const { data } = await axios.get(`https://viacep.com.br/ws/${cep}/json/`);\r\n    \r\n    if (data.erro) {\r\n      setAddressValid(false);\r\n      setAdress(initialAddress);\r\n    }\r\n    else {\r\n      const newEnderco: EnderecoDTO = {\r\n        cep: data.cep,\r\n        cidade: data.localidade.length ? data.localidade : 'cidade não informada',\r\n        complemento: data.complemento.length ? data.complemento : 'Sem complemento',\r\n        estado: data.uf.length ? data.uf : 'Estado não informado',\r\n        logradouro: data.logradouro ? data.logradouro : 'Logradouro não informado',\r\n        pais: 'Brasil',\r\n        tipo: 'COMERCIAL',\r\n        numero: data.numero !== undefined ? data.numero : 0\r\n      }\r\n      getPessoas();\r\n      setAddressValid(true);\r\n      setAdress(newEnderco);\r\n\r\n    }\r\n  }\r\n\r\n  const pegarIdPessoa = (e: any) => {\r\n    const pessoa = [...e.target].find((element: any) => element.selected);\r\n    setIdPessoa(pessoa.value);\r\n    \r\n  }\r\n  const validateCep = (values: Cep) => {\r\n    const errors: FormikErrors<Cep> = {};\r\n    let cepNumeros = values.cep.replaceAll(new RegExp('[_-]', 'gi'), '');\r\n    if (!values.cep) {\r\n      errors.cep = 'CEP é obrigatório';\r\n    } else if (cepNumeros.length !== 8) {\r\n      errors.cep = 'CEP deve conter 8 números';\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  const validateAddress = (values: EnderecoDTO) => {\r\n    const errors: FormikErrors<EnderecoDTO> = {};\r\n    if (!values.cidade) {\r\n      errors.cidade = 'Cidade é campo obrigatório';\r\n    }\r\n    if (!values.estado) {\r\n      errors.estado = 'Estado é um campo obrigatório';\r\n    }\r\n\r\n\r\n  }\r\n  return (\r\n    <div className={styles.form}>\r\n      <h1 className={styles.titulo}>Endereço</h1>\r\n      <Formik\r\n        initialValues={{\r\n          cep: '',\r\n        }}\r\n        validate={validateCep}\r\n        onSubmit={(\r\n          values: Cep,\r\n          { setSubmitting }: FormikHelpers<Cep>\r\n        ) => {\r\n          getAddress(values.cep);\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        <Form>\r\n          <div className={styles.cep}>\r\n          <label htmlFor=\"cep\">Cep</label>\r\n          <Field id=\"cep\" name=\"cep\" render={({ field }: any) => (\r\n            <ReactInputMask {...field} mask={`99999-999`} placeholder='Insira seu CEP' />\r\n          )} />\r\n          <ErrorMessage name='cep' />\r\n          {!adrressValid ? (<p className='error'>CEP inexistente</p>) : null}\r\n          <button type=\"submit\" className={styles.submitCep}><BsSearch/></button>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n      <Formik\r\n        initialValues={address}\r\n        validate={validateAddress}\r\n        enableReinitialize={true}\r\n        onSubmit={(\r\n          values: EnderecoDTO,\r\n          { setSubmitting }: FormikHelpers<EnderecoDTO>\r\n        ) => {\r\n          postEndereco(values, idPessoa)\r\n          setAdress(initialAddress);\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        <Form>\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"cidade\">Cidade</label>\r\n              <Field id=\"cidade\" name=\"cidade\" />\r\n              <ErrorMessage name='cidade' />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"logradouro\">Logradouro</label>\r\n              <Field id=\"logradouro\" name=\"logradouro\" />\r\n              <ErrorMessage name='logradouro' />\r\n            </div>\r\n            <div className={styles.ufEPais}>\r\n            <div>\r\n              <label htmlFor=\"numero\">Número</label>\r\n              <Field id=\"numero\" name=\"numero\" type='number' />\r\n              <ErrorMessage name='numero' />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"estado\">UF</label>\r\n              <Field id=\"estado\" name=\"estado\" />\r\n              <ErrorMessage name='estado' />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"pais\">País</label>\r\n              <Field id=\"pais\" name=\"pais\" />\r\n              <ErrorMessage name='pais' />\r\n            </div>\r\n            </div>\r\n           \r\n            {listPessoas && listPessoas.length ? (\r\n              <div>\r\n                <label>Adicionar endereço a: </label>\r\n                <Field as=\"select\" name=\"user\" id='usuarios-endereco' onChange={(e: any) => pegarIdPessoa(e)}>\r\n                  {listPessoas.map((pessoa: PessoaDTO) => (\r\n                    <option value={pessoa.idPessoa} >{pessoa.nome}</option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n            ) : null}\r\n\r\n            <button type=\"submit\" className='botao1'>Enviar</button>\r\n          </>\r\n        </Form>\r\n      </Formik >\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Endereco;"]},"metadata":{},"sourceType":"module"}