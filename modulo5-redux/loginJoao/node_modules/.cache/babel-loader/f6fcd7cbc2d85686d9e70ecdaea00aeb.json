{"ast":null,"code":"import { api } from \"../../api\";\nimport { useNavigate } from \"react-router\";\nimport moment from \"moment\"; // GET\n\nexport const getPessoas = async dispatch => {\n  const {\n    data\n  } = await api.get('/pessoa');\n\n  if (data) {\n    dispatch({\n      type: 'GET_PESSOAS',\n      pessoas: data.sort((pessoa1, pessoa2) => pessoa1.idPessoa > pessoa2.idPessoa ? 1 : -1)\n    });\n  } else {\n    alert('Deu erro no login');\n  }\n};\nexport const sortPessoas = (dispatch, pessoas, criterio) => {\n  if (criterio === 'id') {\n    pessoas.sort((pessoa1, pessoa2) => pessoa1.idPessoa > pessoa2.idPessoa ? 1 : -1);\n  } else if (criterio === 'data') {\n    pessoas.sort((pessoa1, pessoa2) => moment(pessoa1.dataNascimento).isAfter(pessoa2.dataNascimento) ? 1 : -1);\n  } else if (criterio === 'nome') {\n    pessoas.sort((pessoa1, pessoa2) => pessoa1.nome > pessoa2.nome ? 1 : -1);\n  }\n\n  dispatch({\n    type: 'SORT_PESSOAS',\n    pessoas: pessoas\n  });\n}; // EDIT (PUT)\n\nexport const prepareEdition = (pessoa, dispatch) => {\n  pessoa.dataNascimento = moment(pessoa.dataNascimento, 'YYYY-MM-DD').format('DDMMYYYY');\n  dispatch({\n    type: 'SET_EDIT',\n    edit: {\n      status: true,\n      pessoa: pessoa\n    }\n  });\n};\nexport const cancelEdit = dispatch => {\n  dispatch({\n    type: 'SET_EDIT',\n    edit: {\n      status: false,\n      pessoa: {}\n    }\n  });\n};\nexport const putPessoa = async (pessoa, id, dispatch) => {\n  console.log('id é: ', id);\n  console.log('pessoa é: ', pessoa);\n  const {\n    data\n  } = await api.put(`/pessoa/${id}`, pessoa);\n  console.log('data no put', data);\n  window.location.href = '/pessoa';\n}; // DELETE \n\nexport const deletePessoa = async (id, dispatch) => {\n  console.log(\"delete id é: \", id);\n  const response = await api.delete(`/pessoa/${id}`);\n\n  if (response) {\n    getPessoas(dispatch);\n  } else {\n    alert('Erro ao deletar');\n  }\n}; // POST \n\nexport const postPessoa = async (pessoa, dispatch) => {\n  const {\n    data\n  } = await api.post('/pessoa', pessoa);\n  console.log('data no post é: ', data);\n  if (data) getPessoas(dispatch);\n  window.location.href = '/pessoa';\n};","map":{"version":3,"sources":["C:/Users/leandro/Desktop/VemSer/modulo5-redux/loginJoao/src/store/actions/PessoaActions.js"],"names":["api","useNavigate","moment","getPessoas","dispatch","data","get","type","pessoas","sort","pessoa1","pessoa2","idPessoa","alert","sortPessoas","criterio","dataNascimento","isAfter","nome","prepareEdition","pessoa","format","edit","status","cancelEdit","putPessoa","id","console","log","put","window","location","href","deletePessoa","response","delete","postPessoa","post"],"mappings":"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","sourcesContent":["import { api } from \"../../api\";\r\nimport { useNavigate } from \"react-router\";\r\nimport moment from \"moment\";\r\n// GET\r\nexport const getPessoas = async (dispatch) => {\r\n  const { data } = await api.get('/pessoa');\r\n  if (data) {\r\n    dispatch({\r\n      type: 'GET_PESSOAS',\r\n      pessoas: data.sort((pessoa1,pessoa2) => pessoa1.idPessoa > pessoa2.idPessoa ? 1 : -1)\r\n    })\r\n  } else {\r\n    alert('Deu erro no login');\r\n  }\r\n}\r\n\r\nexport const sortPessoas = (dispatch, pessoas, criterio) =>{\r\n  if(criterio==='id'){\r\n    pessoas.sort((pessoa1,pessoa2) => pessoa1.idPessoa > pessoa2.idPessoa ? 1 : -1)\r\n  } else if(criterio==='data'){\r\n    pessoas.sort((pessoa1,pessoa2) => moment(pessoa1.dataNascimento).isAfter(pessoa2.dataNascimento) ? 1 : -1)\r\n  }\r\n  else if(criterio==='nome'){\r\n    pessoas.sort((pessoa1,pessoa2) => pessoa1.nome > pessoa2.nome ? 1 : -1)\r\n  }\r\n  dispatch({\r\n    type:'SORT_PESSOAS',\r\n    pessoas: pessoas\r\n  })\r\n}\r\n\r\n// EDIT (PUT)\r\n\r\nexport const prepareEdition = (pessoa, dispatch) => {\r\n  pessoa.dataNascimento = moment(pessoa.dataNascimento,'YYYY-MM-DD').format('DDMMYYYY');\r\n  dispatch({\r\n    type: 'SET_EDIT',\r\n    edit: {\r\n      status: true,\r\n      pessoa: pessoa\r\n    }\r\n  })  \r\n}\r\n\r\n\r\nexport const cancelEdit = (dispatch) => {\r\n  dispatch({\r\n    type: 'SET_EDIT',\r\n    edit: {\r\n      status: false,\r\n      pessoa: {}\r\n    }\r\n  });\r\n}\r\n\r\nexport const putPessoa = async (pessoa, id, dispatch) =>{\r\n  console.log('id é: ', id);\r\n  console.log('pessoa é: ', pessoa);\r\n  const {data} = await api.put(`/pessoa/${id}`,pessoa);\r\n  console.log('data no put', data)\r\n  window.location.href = '/pessoa';\r\n}\r\n\r\n\r\n// DELETE \r\nexport const deletePessoa = async (id, dispatch) => {\r\n  console.log(\"delete id é: \", id)\r\n  const response = await api.delete(`/pessoa/${id}`);\r\n  if (response) {\r\n    getPessoas(dispatch);\r\n  }else{\r\n    alert('Erro ao deletar')\r\n  }\r\n}\r\n\r\n// POST \r\nexport const postPessoa = async (pessoa, dispatch) => {\r\n  const { data } = await api.post('/pessoa', pessoa);\r\n  console.log('data no post é: ', data)\r\n  if(data) getPessoas(dispatch);\r\n  window.location.href='/pessoa';\r\n}"]},"metadata":{},"sourceType":"module"}